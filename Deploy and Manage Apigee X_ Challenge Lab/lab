## Deploy and Manage Apigee X: Challenge Lab


------------------------------------------------------------------------------------------------------------------------------------------------------------------

TASK 1: Modify the environments and environment groups

âœª Add staging environment:

â–¶ Navigate to Admin > Environments > Overview.
â–¶ In the upper right corner, click +Environment.
â–¶ Specify [ staging ] for Display name and Environment name. Other fields should remain unchanged.
â–¶ Click Create.

âœª Add staging environment group: 

â–¶ Navigate to Admin > Environments > Groups.
â–¶ In the upper right corner, click +Environment Group.
â–¶ Name the environment group [ staging-group ], and then click Add.
â–¶ In the [ staging-group ] environment group box, click the edit (pencil) button (pencil icon).
â–¶ In the Environments box, click the + button.
â–¶ Select the [ staging ] environment, and then click Add.
â–¶ Leave the default hostname that is created for the new environment group.




Subscribe to Drabhishek
------------------------------------------------------------------------------------------------------------------------------------------------------------------

TASK 2: Use the provisioning wizard to set up access routing


âœª Set up access routing:-

â–¶ Next to Access routing, click Edit.
â–¶ Select Enable internet access.
â–¶ Select Use wildcard DNS service.
â–¶ For Subnetwork, select [ api-subnet ].
â–¶ Click Set Access.


------------------------------------------------------------------------------------------------------------------------------------------------------------------

TASK 3: Create and activate a NAT address for the instance

âœª Create NAT address:-

â–¶ Open the Apigee API.
â–¶ find organizations.instances.natAddresses.
â–¶ Under organizations.instances.natAddresses, click create.
â–¶ In the Try this API pane, set the parent to:

ðŸ”µ      organizations/{YOUR PROJECTID}/instances/eval-instance

â–¶ Change {YOUR PROJECTID} to your [ Google Cloud Project ID ].
â–¶ Click Add request body parameters, and then click name.
â–¶ Between the double quotes, set the string to: [ apigee-nat-ip ].
â–¶ Click Execute.

âœª Activate NAT address:-

â–¶ In the left pane, under organizations.instances.natAddresses, click activate.
â–¶ In the Try this API pane, set the parent to:

ðŸ”µ     organizations/{YOUR PROJECTID}/instances/eval-instance/natAddresses/apigee-nat-ip

â–¶ Change {YOUR PROJECTID} to your [ Google Cloud Project ID ].
â–¶ Click Execute.



Thanks for watching.!
------------------------------------------------------------------------------------------------------------------------------------------------------------------

TASK 4: Create a Cloud Armor security policy and attach it to the global load balancer

âœª Create the Cloud Armor policy:-

â–¶ In the Cloud Console tab, on the Navigation menu (navigation menu button), navigate to Network security > Cloud Armor.
â–¶ Click Create policy.
â–¶ For Name, specify [ protect-apigee ].
â–¶ Default rule action choose Allow.
â–¶ Click Next step > + Add rule > Advanced mode.
â–¶ For Match, specify the following expression:

ðŸ”µ   evaluatePreconfiguredExpr('rce-stable')

â–¶ Leave Action set to Deny, and leave Deny status set to 403 (Forbidden).
â–¶ Set Priority to 1000.
â–¶ Click Done.
â–¶ Click Create policy.

âœª Attach the Cloud Armor policy:-

â–¶ Next to protect-apigee, click the policy menu button (three dots), and then click Apply policy to target.
â–¶ Click + Add target.
â–¶ For the Target dropdown, select apigee-proxy-backend, and then click Add.


------------------------------------------------------------------------------------------------------------------------------------------------------------------

TASK 5: Attach the staging environment to the runtime instance

âœª Attach the environment to the runtime instance:-

â–¶ Return to the Cloud Console tab.
â–¶ On the top-right toolbar, click the Activate Cloud Shell button.
â–¶ In the Cloud Shell, verify the variable with your Apigee org name.
â–¶ Run the following command:

echo ${GOOGLE_CLOUD_PROJECT}


export INSTANCE_NAME=eval-instance; curl -s -H "Authorization: Bearer $(gcloud auth print-access-token)" -H "Content-Type: application/json" -X POST "https://apigee.googleapis.com/v1/organizations/${GOOGLE_CLOUD_PROJECT}/instances/${INSTANCE_NAME}/attachments" -d '{ "environment": "staging" }' | jq


export ATTACHING_ENV=staging; export INSTANCE_NAME=eval-instance; echo "waiting for ${ATTACHING_ENV} attachment"; while : ; do export ATTACHMENT_DONE=$(curl -s -H "Authorization: Bearer $(gcloud auth print-access-token)" -X GET "https://apigee.googleapis.com/v1/organizations/${GOOGLE_CLOUD_PROJECT}/instances/${INSTANCE_NAME}/attachments" | jq "select(.attachments != null) | .attachments[] | select(.environment == \"${ATTACHING_ENV}\") | .environment" --join-output); [[ "${ATTACHMENT_DONE}" != "${ATTACHING_ENV}" ]] || break; echo -n "."; sleep 5; done; echo; echo "***${ATTACHING_ENV} ENVIRONMENT ATTACHED***";



------------------------------------------------------------------------------------------------------------------------------------------------------------------

                           Congratulations, you're all done with the lab ðŸ˜„ Don't forget to subscribe our YouTube ChannelðŸ˜„
                                        
                                                                 Thanks for watching.!
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
